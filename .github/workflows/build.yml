# Naam: Atmanirbhar Android CI/CD (Kotlin)
name: Self-Healing Android CI/CD (Kotlin)

on: 
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Code ko runner machine par copy karna
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Java Development Kit (JDK) 17 set up karna
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Gradle ko install karna (ye asli Gradle hai, wrapper nahi)
      # Iski zaroorat hai taaki hum 'gradle wrapper' command chala sakein
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          # Ek stable Gradle version chunn lein
          gradle-version: '8.7'

      # Step 4: Gradle Wrapper banana
      - name: Generate Gradle Wrapper
        run: |
          echo "Gradle wrapper banaya ja raha hai repository root mein..."
          gradle wrapper

      # Step 5: Verify SettingsScreen.kt content
      - name: Print SettingsScreen.kt content
        run: cat app/src/main/java/com/suvojeet/issuetracker/screens/SettingsScreen.kt

      # Step 6: Verify IssueParser.kt content
      - name: Print IssueParser.kt content
        run: cat app/src/main/java/com/suvojeet/issuetracker/utils/IssueParser.kt

      # Step 7: Ab banaye gaye Gradle Wrapper se App ko build karna
      # Ab humein 100% pata hai ki gradlew file maujood hai
      - name: Build with Gradle Wrapper
        run: ./gradlew clean assembleRelease

      # Step 6: Release hone par APK ko upload karna
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }} # Example tag name
          name: Release v1.0.${{ github.run_number }}
          body: Automated release from CI/CD.
          draft: false
          prerelease: false
          files: app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

